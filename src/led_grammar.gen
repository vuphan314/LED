prog_el_s(progEls T) ::= prog_el(T)
prog_el_s(progEls T cut_root(Ts)) ::= prog_el(T) prog_el_s(Ts)

prog_el(T) ::= hashIsGame(T)
prog_el(T) ::= led_def(T)

led_def(T) ::= fun_def(T)
led_def(T) ::= rel_def(T)

fun_def(funDefNoWhere T T2) ::= form_fun_expr(T) colonEq def_body(T2)
fun_def(funDefWhere T T2 T3) ::= form_fun_expr(T) colonEq def_body(T2) where bool_term(T3)

rel_def(relDefNoWhere T T2) ::= form_fun_expr(T) iff def_body(T2)
rel_def(relDefWhere T T2 T3) ::= form_fun_expr(T) iff def_body(T2) where bool_term(T3)

def_body(T) ::= term(T)
def_body(T) ::= cond_term_s(T)

term(T) ::= nonbool_term(T)
term(T) ::= bool_term(T)

nonbool_term(T) ::= atom_term(T)
nonbool_term(T) ::= string_term(T)
nonbool_term(T) ::= tuple_term(T)
nonbool_term(T) ::= tuple_indexed_term(T)
nonbool_term(T) ::= set_term(T)
nonbool_term(T) ::= ar_term(T)
nonbool_term(T) ::= inner_term(T)

inner_term(T) ::= lParenth term(T) rParenth
inner_term(T) ::= named_term(T)

atom_term(T) ::= atom_term_1(T)

atom_term_1(T) ::= named_term(T)
atom_term_1(T) ::= atom(T)

string_term(T) ::= string_term_1(T)

string_term_1(T) ::= named_term(T)
string_term_1(T) ::= string(T)

tuple_term(T) ::= tuple_term_1(T)

tuple_term_1(plusOp T T2) ::= tuple_term_1(T) plus tuple_term_2(T2)
tuple_term_1(T) ::= tuple_term_2(T)

tuple_term_2(T) ::= named_term(T)
tuple_term_2(tpl T) ::= lParenth term_s(T) rParenth
tuple_term_2(T) ::= tuple_indexed_term(T)

tuple_indexed_term(T) ::= tuple_indexed_term_1(T)

tuple_indexed_term_1(T) ::= named_term(T)
tuple_indexed_term_1(tuIn T T2) ::= tuple_term(T) lBracket ar_term(T2) rBracket
tuple_indexed_term_1(tuSl T T2 T3) ::= tuple_term(T) lBracket ar_term(T2) twoDots ar_term(T3) rBracket

set_term(T) ::= set_term_1(T)

set_term_1(unn T T2) ::= set_term_1(T) U set_term_2(T2)
set_term_1(diff T T2) ::= set_term_1(T) backslash set_term_2(T2)
set_term_1(T) ::= set_term_2(T)

set_term_2(nrsec T T2) ::= set_term_2(T) sec set_term_3(T2)
set_term_2(starOp T T2) ::= set_term_2(T) star set_term_3(T2)
set_term_2(T) ::= set_term_3(T)

set_term_3(aggrUnn T T2) ::= U lBracket bool_term(T) rBracket set_term_3(T2)
set_term_3(aggrNrsec T T2) ::= Sec lBracket bool_term(T) rBracket set_term_3(T2)
set_term_3(T) ::= inner_set_term(T)

inner_set_term(T) ::= lParenth set_term(T) rParenth
inner_set_term(T) ::= named_term(T)
inner_set_term(powSet T) ::= Pow lParenth set_term(T) rParenth
inner_set_term(T) ::= brace_set(T)

brace_set(setEmpty) ::= lBrace rBrace
brace_set(setNonempty T) ::= lBrace term_s(T) rBrace
brace_set(iv T T2) ::= lBrace ar_term(T) twoDots ar_term(T2) rBrace
brace_set(setCompr T T2) ::= lBrace term(T) pipe bool_term(T2) rBrace

bool_term(T) ::= bool_term_1(T)

bool_term_1(equiv T T2) ::= bool_term_2(T) equivalent bool_term_1(T2)
bool_term_1(T) ::= bool_term_2(T)

bool_term_2(impl T T2) ::= bool_term_3(T) implies bool_term_2(T2)
bool_term_2(T) ::= bool_term_3(T)

bool_term_3(disj T T2) ::= bool_term_3(T) opDisj bool_term_4(T2)
bool_term_3(T) ::= bool_term_4(T)

bool_term_4(conj T T2) ::= bool_term_4(T) opConj bool_term_5(T2)
bool_term_4(T) ::= bool_term_5(T)

bool_term_5(neg T) ::= tilde bool_term_5(T)
bool_term_5(T) ::= bool_term_6(T)

bool_term_6(T) ::= quantified_term(T)
bool_term_6(T) ::= set_bool_term(T)
bool_term_6(T) ::= equality(T)
bool_term_6(T) ::= inner_bool_term(T)

inner_bool_term(T) ::= lParenth bool_term(T) rParenth
inner_bool_term(T) ::= named_term(T)
inner_bool_term(T) ::= truth(T)

quantified_term(exist T T2) ::= some sym_s_in_set_term(T) dot bool_term_6(T2)
quantified_term(univ T T2) ::= all sym_s_in_set_term(T) dot bool_term_6(T2)

set_bool_term(sbset T T2) ::= set_term(T) sub set_term(T2)
set_bool_term(setMem T T2) ::= set_mem_arg(T) in set_term(T2)

set_mem_arg(T) ::= nonbool_term(T)
set_mem_arg(T) ::= inner_bool_term(T)

equality(eq T T2) ::= equality_arg(T) equal equality_arg(T2)
equality(uneq T T2) ::= equality_arg(T) unequal equality_arg(T2)
equality(T) ::= relational(T)

equality_arg(T) ::= nonbool_term(T)
equality_arg(T) ::= inner_bool_term(T)

relational(less T T2) ::= ar_term(T) lArrow ar_term(T2)
relational(greater T T2) ::= ar_term(T) rArrow ar_term(T2)
relational(lessEq T T2) ::= ar_term(T) lessOrEq ar_term(T2)
relational(greaterEq T T2) ::= ar_term(T) greaterOrEq ar_term(T2)

ar_term(T) ::= ar_term_1(T)

ar_term_1(plusOp T T2) ::= ar_term_1(T) plus ar_term_2(T2)
ar_term_1(binaryMinus T T2) ::= ar_term_1(T) minus ar_term_2(T2)
ar_term_1(T) ::= ar_term_2(T)

ar_term_2(starOp T T2) ::= ar_term_2(T) star ar_term_3(T2)
ar_term_2(div T T2) ::= ar_term_2(T) slash ar_term_3(T2)
ar_term_2(md T T2) ::= ar_term_2(T) mod ar_term_3(T2)
ar_term_2(T) ::= ar_term_3(T)

ar_term_3(aggrSum T T2) ::= Sum lBracket bool_term(T) rBracket ar_term_3(T2)
ar_term_3(aggrProd T T2) ::= Prod lBracket bool_term(T) rBracket ar_term_3(T2)
ar_term_3(unaryMinus T) ::= minus ar_term_3(T)
ar_term_3(T) ::= plus ar_term_3(T)
ar_term_3(T) ::= ar_term_4(T)

ar_term_4(exp T T2) ::= inner_ar_term(T) hat ar_term_3(T2)
ar_term_4(T) ::= inner_ar_term(T)

inner_ar_term(T) ::= lParenth ar_term(T) rParenth
inner_ar_term(T) ::= named_term(T)
inner_ar_term(N) ::= numl(N)
inner_ar_term(flr T) ::= floor lParenth ar_term(T) rParenth
inner_ar_term(clng T) ::= ceil lParenth ar_term(T) rParenth
inner_ar_term(pipesOp T) ::= pipe pipes_arg(T) pipe

pipes_arg(T) ::= ar_term(T)
pipes_arg(T) ::= set_term(T)
pipes_arg(T) ::= tuple_term(T)

term_s(terms T) ::= term(T)
term_s(terms T cut_root(Ts)) ::= term(T) comma term_s(Ts)

sym_s(syms T) ::= led_sym(T)
sym_s(syms T cut_root(Ts)) ::= led_sym(T) comma sym_s(Ts)

sym_s_in_set_term(symsInSet T T2) ::= sym_s(T) in set_term(T2)

term_if_bool_term(termIfBoolTerm T T2) ::= term(T) if bool_term(T2)
term_ow(termOw T) ::= term(T) otherwise

cond_term(T) ::= term_if_bool_term(T)
cond_term(T) ::= term_ow(T)

cond_term_s(condTerms T) ::= cond_term(T)
cond_term_s(condTerms T cut_root(Ts)) ::= cond_term(T) semicolon cond_term_s(Ts)

form_fun_expr(formFunExpr T) ::= fun_name(T)
form_fun_expr(formFunExpr T T2) ::= fun_name(T) lParenth sym_s(T2) rParenth

act_fun_expr(actFunExpr T) ::= fun_name(T)
act_fun_expr(actFunExpr T T2) ::= fun_name(T) lParenth term_s(T2) rParenth

fun_name(T) ::= id(T)
led_sym(T) ::= id(T)

named_term(T) ::= act_fun_expr(T)
named_term(T) ::= led_sym(T)
